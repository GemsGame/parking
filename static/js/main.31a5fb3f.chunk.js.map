{"version":3,"sources":["reducers/cars.js","reducers/brands.js","reducers/models.js","reducers/tenants.js","reducers/on-parking.js","reducers/filter.js","reducers/car-values.js","reducers/parking-values.js","reducers/rootReducer.js","store/store.js","components/Item/Item.jsx","actions/cars.js","components/ItemList/ItemList.jsx","actions/onParking.js","containers/Main/Main.jsx","components/Input/Input.jsx","components/Select/Select.jsx","components/Portal/Portal.jsx","components/Modal/Modal.jsx","hooks/useModal.js","containers/NewCar/NewCar.jsx","actions/brands.js","actions/models.js","actions/tenants.js","containers/Search/Search.jsx","App.js","index.js"],"names":["cars","state","action","type","payload","brands","models","tenants","onParking","filter","carValues","parkingValues","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Item","props","car","id","car_brand","car_model","car_tenant","car_number","toParking","leaveParking","update","className","name","Button","variant","onClick","addCarError","result","mapDispatchToProps","getAllCars","dispatch","fetch","method","then","response","json","getAllCarsSuccess","catch","error","onParkingSuccess","err","carId","callback","date","Date","headers","body","JSON","stringify","toLocaleTimeString","toLocaleDateString","addNotification","title","message","insert","container","animationIn","animationOut","dismiss","duration","onScreen","showIcon","addToParkingSuccess","leaveParkingSuccess","connect","item","includes","length","map","i","push","getCars","getCarsOnParking","useEffect","key","Main","Container","fluid","Row","Col","Input","classNameLabel","classNameError","classWrapper","label","htmlFor","defaultProps","Select","opt","options","optionHeader","value","onChange","Portal","element","document","createElement","appendChild","this","removeChild","ReactDOM","createPortal","children","Component","Modal","style","isOpen","useModal","useState","setIsOpen","open","console","log","close","addCar","form","Object","prototype","hasOwnProperty","call","addCarSuccess","keys","toString","getBrands","getModels","getModelsSuccess","getTenants","getTenatsSuccess","setForm","handleChange","event","target","e","textAlign","placeholder","filterChange","text","ChangeCarValue","ChangeParkingValue","App","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.31a5fb3f.chunk.js","sourcesContent":["const cars = (state = [], action) => {\r\n    switch(action.type) {\r\n        case \"GET_ALL_CARS_SUCCESS\":\r\n            return action.payload;\r\n            case \"GET_ALL_CARS_ERROR\":\r\n                return state;\r\n                default:\r\n                    return state;\r\n    }\r\n}\r\n\r\nexport default cars;","const brands = (state = [], action) => {\r\n     switch(action.type) {\r\n         case 'GET_BRANDS_SUCCESS':\r\n             return action.payload;\r\n             default:\r\n                 return state;\r\n     }\r\n}\r\n\r\nexport default brands;","const models = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'GET_MODELS_SUCCESS':\r\n            return action.payload;\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default models;","const tenants = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'GET_TENANTS_SUCCESS':\r\n            return action.payload;\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default tenants;","const onParking = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'GET_ON_PARKING_SUCCESS':\r\n            return action.payload;\r\n            default:\r\n                return state;\r\n    }\r\n}\r\nexport default onParking;","const filter = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'FILTER_CHANGE':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filter;","const carValues = (state = 'car_brand', action) =>  {\r\n  switch(action.type) {\r\n      case 'RULES_CHANGE_CAR_VALUES':\r\n          return action.payload;\r\n          default:\r\n              return state;\r\n  }\r\n\r\n}\r\n\r\nexport default carValues;","const parkingValues = (state = false, action) =>  {\r\n    switch(action.type) {\r\n        case 'RULES_CHANGE_PARKING_VALUES':\r\n            return action.payload;\r\n            default:\r\n                return state;\r\n    }\r\n  \r\n  }\r\n  \r\n  export default parkingValues;","import { combineReducers } from 'redux';\r\nimport cars from './cars';\r\nimport brands from './brands';\r\nimport models from './models';\r\nimport tenants from './tenants';\r\nimport onParking from './on-parking';\r\nimport filter from './filter';\r\nimport carValues from './car-values';\r\nimport parkingValues from './parking-values';\r\nexport const rootReducer = combineReducers({\r\n  cars,\r\n  brands,\r\n  models,\r\n  tenants,\r\n  onParking,\r\n  filter,\r\n  carValues,\r\n  parkingValues,\r\n});\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Item.scss';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nconst Item = props => {\r\n    const { id, car_brand, car_model, car_tenant, car_number } = props.car;\r\n\r\n    const { toParking, leaveParking, update }  = props;\r\n    return (\r\n\r\n        <div className=\"item-car\">\r\n        \r\n            <div className=\"item-car__col\">\r\n                {id}\r\n            </div>\r\n            <div className=\"item-car__col\">\r\n                {car_brand !== null ? car_brand.name : 'не установлено'}\r\n            </div>\r\n            <div className=\"item-car__col\">\r\n                {car_model !== null ? car_model.name : 'не установлено'}\r\n            </div>\r\n            <div className=\"item-car__col\">\r\n                {car_tenant !== null ? car_tenant.name : 'не установлено'}\r\n            </div>\r\n            <div className=\"item-car__col flex-col\">\r\n                {car_number}\r\n\r\n                <div className=\"item-car__number\">\r\n\r\n                    <Button variant=\"micro-neu\" onClick={() => toParking(id, update)}><i className=\"fas fa-car\"></i></Button>\r\n                    <Button variant=\"micro-neu\" onClick={() => leaveParking(id, update)}><i className=\"fas fa-car-side\"></i></Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nItem.propTypes = {\r\n\r\n}\r\n\r\nexport default Item\r\n","import { store } from 'react-notifications-component';\r\n\r\nconst getAllCarsSuccess = (result) => ({\r\n    type: 'GET_ALL_CARS_SUCCESS',\r\n    payload: result\r\n});\r\n\r\nconst getAllCarsError = (result) => ({\r\n    type: 'GET_ALL_CARS_ERROR',\r\n    payload: result\r\n});\r\n\r\n\r\nconst addCarSuccess = (result) => ({\r\n    type: 'ADD_CAR_SUCCESS',\r\n    payload: result\r\n});\r\n\r\nconst addCarError = (result) => ({\r\n    type: 'ADD_CAR_ERROR',\r\n    payload: result\r\n});\r\n\r\nexport const getAllCars = () => dispatch => {\r\n    fetch('api/cars/', {\r\n        method: 'GET',\r\n    }).then(response => response.json()).then(result => dispatch(getAllCarsSuccess(result)))\r\n        .catch(error => dispatch(getAllCarsError(error)));\r\n}\r\n\r\n\r\nexport const addCar = (form) => dispatch => {\r\n    fetch('api/cars/add/',\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n            },\r\n            body: JSON.stringify(form)\r\n        }).then(response => response.json()\r\n        ).then(result => {\r\n\r\n            if(Object.prototype.hasOwnProperty.call(result, 'id')) {\r\n            store.addNotification({\r\n                title: \"Автомобиль добавлен!\",\r\n                message: \" \",\r\n                type: \"success\",\r\n                insert: \"top\",\r\n                container: \"bottom-center\",\r\n                animationIn: [\"animated\", \"fadeIn\"],\r\n                animationOut: [\"animated\", \"fadeOut\"],\r\n                dismiss: {\r\n                    duration: 5000,\r\n                    onScreen: false,\r\n                    showIcon: true,\r\n                }\r\n            });\r\n            dispatch(addCarSuccess(result))\r\n\r\n        } else {\r\n            let err = Object.keys(result).map(item =>  {\r\n                \r\n                return `${item} - ${result[item][0]}`;\r\n            }).toString();\r\n            store.addNotification({\r\n                title: \"Ошибка! Проверьте форму\",\r\n                message: err,\r\n                type: \"danger\",\r\n                insert: \"top\",\r\n                container: \"bottom-center\",\r\n                animationIn: [\"animated\", \"fadeIn\"],\r\n                animationOut: [\"animated\", \"fadeOut\"],\r\n                dismiss: {\r\n                    duration: 5000,\r\n                    onScreen: false,\r\n                    showIcon: true,\r\n                }\r\n            });\r\n            \r\n        \r\n            dispatch(addCarError(result));\r\n        }\r\n        })\r\n        .catch(error => {\r\n\r\n            store.addNotification({\r\n                title: \"Ошибка! Проверьте форму\",\r\n                message: error,\r\n                type: \"danger\",\r\n                insert: \"top\",\r\n                container: \"bottom-center\",\r\n                animationIn: [\"animated\", \"fadeIn\"],\r\n                animationOut: [\"animated\", \"fadeOut\"],\r\n                dismiss: {\r\n                    duration: 5000,\r\n                    onScreen: false,\r\n                    showIcon: true,\r\n                }\r\n            });\r\n\r\n            dispatch(addCarError(error));\r\n        })\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAllCars } from '../../actions/cars';\r\nimport { onParking, toParking, leaveParking } from '../../actions/onParking';\r\nimport PropTypes from 'prop-types';\r\nimport Item from '../Item/Item';\r\nimport './itemList.scss';\r\n\r\nconst ItemList = ({ getAllCars: getCars, onParking: getCarsOnParking, cars, toParking, leaveParking }) => {\r\n\r\n  \r\n    useEffect(() => {\r\n        getCars();\r\n        getCarsOnParking();\r\n    }, []);\r\n    \r\n  \r\n\r\n  \r\n    return (\r\n        <>\r\n       \r\n            <div className=\"item-car\">\r\n                <div className=\"item-car__col\">id</div>\r\n                <div className=\"item-car__col\">Марка</div>\r\n                <div className=\"item-car__col header\">Модель</div>\r\n                <div className=\"item-car__col header\">Арендатор</div>\r\n                <div className=\"item-car__col header\">Номер</div>\r\n            </div>\r\n            {cars.map((item, i) => <Item car={item} key={i} update={getCarsOnParking} toParking={toParking} leaveParking={leaveParking}/>)}\r\n        </>);\r\n\r\n}\r\n\r\nItemList.propTypes = {\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    cars: state.cars.filter(item => {\r\n        if (state.parkingValues === false) {\r\n            if (item[state.carValues]) {\r\n\r\n                if (item[state.carValues].name) {\r\n                    return item[state.carValues].name.includes(state.filter);\r\n                } else {\r\n                    return item[state.carValues].includes(state.filter);\r\n                }\r\n            }\r\n            if (state.filter.length === 0) {\r\n                return item;\r\n            }\r\n        } else {\r\n            let result = [];\r\n            state.onParking.map(i => {\r\n                if (i.car === item.id) {\r\n                    result.push(item);\r\n                };\r\n            });\r\n            if (result.length > 0) {\r\n                if (result[0][state.carValues].name) {\r\n                    return result[0][state.carValues].name.includes(state.filter);\r\n                } else return result[0];\r\n            }\r\n        }\r\n\r\n\r\n    }),\r\n})\r\nconst mapDispatchToProps = {\r\n    getAllCars,\r\n    onParking,\r\n    toParking,\r\n    leaveParking\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemList);\r\n ","import { store } from 'react-notifications-component';\r\n\r\nconst onParkingSuccess = (result) => ({\r\n    type: 'GET_ON_PARKING_SUCCESS',\r\n    payload: result\r\n});\r\nconst onParkingError = (result) => ({\r\n    type: 'GET_ON_PARKING_ERROR',\r\n    payload: result\r\n});\r\n\r\nconst addToParkingSuccess = (result) => ({\r\n    type: 'ADD_CAR_TO_PARKING_SUCCESS',\r\n    payload: result\r\n});\r\nconst addToParkingError = (result) => ({\r\n    type: 'ADD_CAR_TO_PARKING_ERROR',\r\n    payload: result\r\n});\r\n\r\nconst leaveParkingSuccess = (result) => ({\r\n    type: 'LEAVE_PARKING_SUCCESS',\r\n    payload: result\r\n});\r\nconst leaveParkingError = (result) => ({\r\n    type: 'LEAVE_PARKING_ERROR',\r\n    payload: result\r\n});\r\nexport const onParking = () => dispatch => {\r\n    fetch('api/stat/here/').then(response => response.json())\r\n        .then(result => dispatch(onParkingSuccess(result)))\r\n        .catch(err => dispatch(onParkingError(err)));\r\n}\r\n\r\n\r\nexport const toParking = (carId, callback) => dispatch => {\r\n    let date = new Date();\r\n    fetch('api/stat/add/', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify({\"time_in\": date.toLocaleTimeString(), \"days\": date.toLocaleDateString(), \"last_flag\": false, \"car\": carId})\r\n    }).then(response => response.json()).then(result => {\r\n   \r\n        store.addNotification({\r\n            title: \"Автомобиль заехал на парковку!\",\r\n            message: `Время: ${date.toLocaleTimeString()}`,\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            container: \"bottom-center\",\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n                duration: 7000,\r\n                onScreen: false,\r\n                showIcon: true,\r\n            }\r\n        });\r\n        dispatch(addToParkingSuccess(result));\r\n        callback();\r\n\r\n    }).catch(error => dispatch(addToParkingError(error)));\r\n\r\n}\r\n\r\nexport const leaveParking = (carId, callback) => dispatch => {\r\n    let date = new Date();\r\n    fetch('api/stat/add/', {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify({\"time_out\": date.toLocaleTimeString(), \"last_flag\": true, \"car\": carId})\r\n    }).then(response => response.json()).then(result => {\r\n   \r\n        store.addNotification({\r\n            title: \"Автомобиль покинул парковку!\",\r\n            message: `Время: ${date.toLocaleTimeString()}`,\r\n            type: \"warning\",\r\n            insert: \"top\",\r\n            container: \"bottom-center\",\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n                duration: 7000,\r\n                onScreen: false,\r\n                showIcon: true,\r\n            }\r\n        });\r\n        dispatch(leaveParkingSuccess(result));\r\n        callback();\r\n    }).catch(error => {\r\n        store.addNotification({\r\n            title: \"Автомобиля нет на парковке!\",\r\n            message: `Уже уехал :)`,\r\n            type: \"danger\",\r\n            insert: \"top\",\r\n            container: \"bottom-center\",\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: {\r\n                duration: 7000,\r\n                onScreen: false,\r\n                showIcon: true,\r\n            }\r\n        });\r\n        dispatch(leaveParkingError(error));\r\n    });\r\n\r\n}","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './Main.scss';\r\nimport Item from '../../components/Item';\r\nimport ItemList from '../../components/ItemList';\r\n\r\nconst Main = props => {\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"table-row\">\r\n                <Col className=\"table\">\r\n                 <ItemList/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default Main;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Input.scss';\r\n\r\nconst Input = ({\r\n  className, classNameLabel, classNameError, classWrapper, id, error, label, ...props\r\n}) => {\r\n\r\n  if(error) {\r\n    className += ' error-border';\r\n  }\r\nreturn <div className='wrapper-input'>\r\n            {label\r\n                && <label className={classNameLabel} htmlFor={id}>{label}</label>\r\n            }\r\n            <input id={id} className={className} {...props} />\r\n            {error\r\n            && <small id={id} className=\"error-text\">{error}</small>\r\n            }\r\n      </div>};\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\nInput.defaultProps = {\r\n\r\n};\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Select.scss';\r\n\r\nconst Select = ({\r\n    id, className, options, value, optionHeader, onChange, ...props\r\n}) => {\r\n    let opt;\r\n    if (optionHeader) {\r\n        opt = <option value=\"\">{optionHeader}</option>;\r\n    }\r\n    return <div className=\"select-wrapper\">\r\n        <select id={id} className={className} onChange={onChange} {...props}>\r\n         {opt}\r\n            {options.map((item, i) => <option key={i} value={item.id}> {item.name}</option>)}\r\n        </select>\r\n    </div>\r\n}\r\n\r\nSelect.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    className: PropTypes.string,\r\n    options: PropTypes.array,\r\n};\r\nSelect.defaultProps = {\r\n    id: 'someid',\r\n    className: '',\r\n    options: [{ id: '1', name: 'car' }],\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default class Portal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.element = document.createElement('div');\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    document.body.appendChild(this.element);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.element);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.element);\r\n  }\r\n}","import React from 'react';\r\nimport './Modal.scss';\r\n\r\nconst Modal = (props) => {\r\n    const { isOpen } = props;\r\n    let style;\r\n    if (!isOpen) {\r\n        style = 'display-none';\r\n    }\r\n    return (\r\n        <div className={`modal-window-wrapper ${style}`}>\r\n            <div className=\"modal-window\">\r\n                <div className=\"modal-window__body\">\r\n                    {props.children}\r\n                </div>\r\n\r\n            </div>\r\n        </div>);\r\n};\r\nexport default Modal;","import React, { useState } from 'react';\r\n\r\nconst useModal = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const open = () => () => {\r\n    setIsOpen(true);\r\n    console.log(isOpen);\r\n  };\r\n  const close = () => () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return {\r\n    isOpen,\r\n    open,\r\n    close,\r\n  };\r\n};\r\n\r\n\r\nexport default useModal;","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './NewCar.scss';\r\nimport Input from '../../components/Input';\r\nimport { Button } from 'react-bootstrap';\r\nimport { addCar } from '../../actions/cars';\r\nimport { getBrands } from '../../actions/brands';\r\nimport { getModels } from '../../actions/models';\r\nimport { getTenants } from '../../actions/tenants';\r\n\r\nimport Select from '../../components/Select';\r\n\r\nconst NewCar = props => {\r\n    const { close, addCar, getBrands, getModels, brands, models, tenants, getTenants } = props;\r\n    const [form, setForm] = useState({car_brand:null, car_model:null, car_tenant:'', car_number:''});\r\n\r\n    const handleChange = (event)  => {\r\n        setForm({ ...form, [event.target.id]: event.target.value });\r\n        console.log(form);\r\n    }\r\n    useEffect(() => {\r\n        getBrands();\r\n        getTenants();\r\n    }, []);\r\n    return (\r\n        <div className=\"new-car\">\r\n            <div className=\"new-car__box\">\r\n                <div className=\"new-car__close-button\" onClick={close}>\r\n                    <i className=\"fas fa-times\"></i>\r\n                </div>\r\n                <div className=\"new-car__content\">\r\n                    <div className=\"new-car__select-buttons\">\r\n                        <Select className=\"neu-select\"\r\n                            id='car_brand'\r\n                            options={brands}\r\n                            optionHeader=\"Выбрать марку...\"\r\n                            onChange={(e) => handleChange(e, getModels(e.target.value))} />\r\n                        <Select className=\"neu-select\"\r\n                            id='car_model'\r\n                            options={models}\r\n                            optionHeader=\"Выбрать модель...\"\r\n                            onChange={(e) => handleChange(e)} />\r\n\r\n                        <Select className=\"neu-select\"\r\n                            id='car_tenant'\r\n                            options={tenants}\r\n                            optionHeader=\"Выбрать арендатора...\"\r\n                            onChange={(e) => handleChange(e)} />\r\n\r\n                        <Input className=\"neu-input\" style={{ textAlign: 'center' }} placeholder=\"Номер\" id=\"car_number\" onChange={(e) => handleChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"new-car__send-button\">\r\n                        <Button variant=\"neu\" onClick={() => addCar(form)}>Cохранить</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nNewCar.propTypes = {\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    brands: state.brands,\r\n    models: state.models,\r\n    tenants: state.tenants,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    addCar,\r\n    getBrands,\r\n    getModels,\r\n    getTenants\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCar);\r\n","const getBrandsSuccess = (response) => ({\r\n    type:'GET_BRANDS_SUCCESS',\r\n    payload:response\r\n});\r\nconst getBrandsError = (response) => ({\r\n    type:'GET_BRANDS_ERROR',\r\n    payload:response\r\n});\r\nexport const getBrands = () => dispatch => {\r\n    fetch('api/cars/brands/', {method:'GET'}).then(response => response.json())\r\n    .then(result => dispatch(getBrandsSuccess(result)))\r\n    .catch(error => dispatch(getBrandsError(error)));\r\n}","const getModelsSuccess = (result) => ({\r\n    type:'GET_MODELS_SUCCESS',\r\n    payload: result\r\n});\r\nconst getModelsError= (result) => ({\r\n    type:'GET_MODELS_ERROR',\r\n    payload: result\r\n})\r\n\r\nexport const getModels = (id) => dispatch => {\r\n    fetch(`api/cars/brands/${id}/`, {method:'GET'}).then(response => response.json())\r\n    .then(result => dispatch(getModelsSuccess(result)))\r\n    .catch(err => dispatch(getModelsError(err)));\r\n}","const getTenatsSuccess = (result) => ({\r\n    type:'GET_TENANTS_SUCCESS',\r\n    payload:result,\r\n});\r\nconst getTenatsError = (result) => ({\r\n    type:'GET_TENANTS_ERROR',\r\n    payload:result,\r\n})\r\n\r\n\r\nexport const getTenants = () => dispatch => {\r\n    fetch('api/tenants/', {method:'GET'}).then(response => response.json())\r\n    .then(result => dispatch(getTenatsSuccess(result)))\r\n    .catch(error => dispatch(getTenatsError(error)));\r\n}","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport './Search.scss';\r\nimport Input from '../../components/Input';\r\nimport Select from '../../components/Select/Select';\r\nimport Portal from '../../components/Portal';\r\nimport Modal from '../../components/Modal';\r\nimport useModal from '../../hooks/useModal';\r\nimport NewCar from '../NewCar';\r\n\r\nconst Search = ({ filterChange, ChangeCarValue, ChangeParkingValue, parkingValues }) => {\r\nconst { isOpen, open, close} = useModal();\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className='search-row'>\r\n                <Col className='search'>\r\n                    <div className=\"search__sort-inputs\">\r\n                        <Input className=\"neu-input\" placeholder=\"Поиск..\" onChange={e => filterChange(e.target.value)} />\r\n                        <Select className=\"neu-select\"\r\n                            options={[{name:'Марка', id:'car_brand'}, {name:'Модель', id:'car_model'}, {name:'Арендатор', id:'car_tenant'}, {name:'Номер', id:'car_number'}]}\r\n                            onChange={e => ChangeCarValue(e.target.value)} />\r\n                      <Button variant=\"neu-black\" onClick={() => ChangeParkingValue(!parkingValues)}><i className=\"fas fa-car\"></i></Button>\r\n                    </div>\r\n                    <div className=\"add-car\">\r\n                        <Portal>\r\n                            <Modal isOpen={isOpen}>\r\n                              <NewCar close={close()}/>\r\n                            </Modal>\r\n                        </Portal>\r\n                        <Button variant=\"neu\" onClick={open()}>Добавить автомобиль</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nSearch.propTypes = {\r\n\r\n}\r\nconst mapStateToProps = state => ({\r\n    parkingValues: state.parkingValues,\r\n})\r\nconst mapDispathToProps = dispatch => {\r\n    return {\r\n        filterChange: text => dispatch({ type: 'FILTER_CHANGE', payload: text }),\r\n        ChangeCarValue: text => dispatch({ type: 'RULES_CHANGE_CAR_VALUES', payload: text }),\r\n        ChangeParkingValue: text => dispatch({ type: 'RULES_CHANGE_PARKING_VALUES', payload: text }),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(Search);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'react-notifications-component/dist/theme.css'\nimport Main from './containers/Main/Main';\nimport Search from './containers/Search';\nimport ReactNotification from 'react-notifications-component';\nimport './style.scss';\nimport 'animate.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ReactNotification/>\n      <Search/>\n      <Main/>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}